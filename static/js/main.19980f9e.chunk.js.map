{"version":3,"sources":["firebase/config.js","userinfo/userSignIn.js","dashboard/profilesettings.js","dashboard/homepage.js","App.js","serviceWorker.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","UserSignin","_this$state","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","Signup","Signin","SinginEmail","SinginPassword","SingupUser","SingupEmail","SingupPassword","SignUpAreaStyle","SignInAreaStyle","ErrorTextOfSignUpPassowrd","ErrorTextOfSignUpUserName","ErrorTextOfSignUpEmail","ErrorTextOfSignInPassowrd","ErrorTextOfSignInEmail","HandleErrorTextOfSignUpPassowrd","HandleErrorTextOfSignUpUserName","defineProperty","auth","handleSignInChanges","bind","assertThisInitialized","handleSignUpChanges","handleSinginEmail","handleSinginPassword","handleSingupEmail","handleSingupPassword","handleSingupUser","handleSignIn","handleSignUP","_this2","onAuthStateChanged","user","updateProfile","displayName","photoURL","then","setState","catch","e","ToastsStore","error","message","_this$setState","_this$setState2","emailValue","passwordValue","userValue","_this3","email","password","SignInPassowrdErrMsg","SignInEmailErrMsg","HandleErrorTextOfSignInEmail","HandleErrorTextOfSignInPassword","promise","signInWithEmailAndPassword","_this4","username","SignUpPassowrdErrMsg","SignUpEmailErrMsg","SignUpUserNameErrMsg","HandleErrorTextOfSignUpEmail","createUserWithEmailAndPassword","SignInBoxCss","display","SignUpBoxCss","padding","SingInArea","react_default","a","createElement","lib","store","className","es","style","size","id","type","label","lineDirection","placeholder","value","onChange","errorText","onClick","Component","ProfileSettings","handleSpanSetting","props","divid","Homepage","userImgUrl","userName","userIconFirstLetter","loadingDash","showSettings","dataLoadingDash","database","ref","child","currentUser","handleLogout","handleSettings","window","onclick","event","modal","document","getElementById","target","setTimeout","on","snap","val","name","uid","toString","charAt","toUpperCase","success","signOut","react_loader_spinner_default","color","height","width","UserIcon","random","src","role","dashboard_profilesettings","_ref","simplifiedMenu","concat","menuItems","divider","anchor","x","DropdownMenu","HorizontalAnchors","CENTER","y","VerticalAnchors","OVERLAP","position","Positions","TOP_RIGHT","animationPosition","sameWidth","component","IconSeparator","iconBefore","App","loading","loggedin","data","handleLoggedIn","handleNotLoggedIn","firebaseUser","checkloggedin","homepage","userSignIn","Boolean","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19980f9e.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBZgL1gKHAcaY-4Y4PGCNfnssztb8IarZU\",\r\n    authDomain: \"moviewebsite-b7ffe.firebaseapp.com\",\r\n    databaseURL: \"https://moviewebsite-b7ffe.firebaseio.com\",\r\n    projectId: \"moviewebsite-b7ffe\",\r\n    storageBucket: \"moviewebsite-b7ffe.appspot.com\",\r\n    messagingSenderId: \"348587192024\",\r\n    appId: \"1:348587192024:web:f4e99bc6e3346a78\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\n\r\nexport default firebaseApp;","import React ,{Component}from 'react'\r\nimport { Grid, Cell, TextField} from 'react-md'\r\nimport firebaseApp from '../firebase/config'\r\nimport firebase from 'firebase'\r\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\r\nimport './userSign.css'\r\n\r\nclass UserSignin extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            Signup:'',\r\n            Signin:'none',\r\n            SinginEmail:\"\",\r\n            SinginPassword:\"\",\r\n            SingupUser:\"\",\r\n            SingupEmail:\"\",\r\n            SingupPassword:\"\",\r\n            SignUpAreaStyle:\"15%\",\r\n            SignInAreaStyle:'19.5%',\r\n            ErrorTextOfSignUpPassowrd:\"\",\r\n            ErrorTextOfSignUpUserName:'',\r\n            ErrorTextOfSignUpEmail:'',\r\n            ErrorTextOfSignInPassowrd:'',\r\n            ErrorTextOfSignInEmail:'',\r\n            HandleErrorTextOfSignUpPassowrd:false,\r\n            HandleErrorTextOfSignUpUserName:false,\r\n            HandleErrorTextOfSignUpPassowrd:false,\r\n            HandleErrorTextOfSignInPassword:false,\r\n            HandleErrorTextOfSignInEmail:false,\r\n        }\r\n\r\n        this.auth = firebaseApp.auth()\r\n\r\n        this.handleSignInChanges = this.handleSignInChanges.bind(this)\r\n        this.handleSignUpChanges = this.handleSignUpChanges.bind(this)\r\n        this.handleSinginEmail = this.handleSinginEmail.bind(this)\r\n        this.handleSinginPassword = this.handleSinginPassword.bind(this)\r\n        this.handleSingupEmail = this.handleSingupEmail.bind(this)\r\n        this.handleSingupPassword = this.handleSingupPassword.bind(this)\r\n        this.handleSingupUser = this.handleSingupUser.bind(this)\r\n        this.handleSignIn = this.handleSignIn.bind(this)\r\n        this.handleSignUP = this.handleSignUP.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.auth.onAuthStateChanged((user) =>{\r\n            if (user) {\r\n              user.updateProfile({\r\n\r\n                displayName: this.state.SingupUser,\r\n                photoURL: \"\",\r\n\r\n              }).then(() => {\r\n\r\n                this.setState({\r\n                    SingupUser:\"\"\r\n                })\r\n\r\n              }).catch( \r\n                e => ToastsStore.error(e.message)\r\n              );     \r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    handleSignInChanges(){\r\n        this.setState({\r\n            Signup:'none',\r\n            Signin:'',\r\n            SinginEmail:\"\",\r\n            SinginPassword:\"\",\r\n            SingupUser:\"\",\r\n            SingupEmail:\"\",\r\n            SingupPassword:\"\",\r\n            SignUpAreaStyle:\"15%\",\r\n            SignInAreaStyle:'19.5%',\r\n            ErrorTextOfSignUpPassowrd:\"\",\r\n            ErrorTextOfSignUpUserName:'',\r\n            ErrorTextOfSignUpEmail:'',\r\n            ErrorTextOfSignInPassowrd:'',\r\n            ErrorTextOfSignInEmail:'',\r\n            HandleErrorTextOfSignUpPassowrd:false,\r\n            HandleErrorTextOfSignUpUserName:false,\r\n            HandleErrorTextOfSignUpPassowrd:false,\r\n            HandleErrorTextOfSignInPassword:false,\r\n            HandleErrorTextOfSignInEmail:false,\r\n        })\r\n    }\r\n\r\n    handleSignUpChanges(){\r\n        this.setState({\r\n            Signup:'',\r\n            Signin:'none',\r\n            SinginEmail:\"\",\r\n            SinginPassword:\"\",\r\n            SingupUser:\"\",\r\n            SingupEmail:\"\",\r\n            SingupPassword:\"\",\r\n            SignUpAreaStyle:\"15%\",\r\n            SignInAreaStyle:'19.5%',\r\n            ErrorTextOfSignUpPassowrd:\"\",\r\n            ErrorTextOfSignUpUserName:'',\r\n            ErrorTextOfSignUpEmail:'',\r\n            ErrorTextOfSignInPassowrd:'',\r\n            ErrorTextOfSignInEmail:'',\r\n            HandleErrorTextOfSignUpPassowrd:false,\r\n            HandleErrorTextOfSignUpUserName:false,\r\n            HandleErrorTextOfSignUpPassowrd:false,\r\n            HandleErrorTextOfSignInPassword:false,\r\n            HandleErrorTextOfSignInEmail:false,\r\n        })\r\n    }\r\n\r\n    handleSinginEmail(emailValue){\r\n        this.setState({\r\n            SinginEmail: emailValue\r\n        })\r\n    }\r\n\r\n    handleSinginPassword(passwordValue){\r\n        this.setState({\r\n            SinginPassword: passwordValue\r\n        })\r\n    }\r\n\r\n    handleSingupEmail(emailValue){\r\n        this.setState({\r\n            SingupEmail: emailValue\r\n        })\r\n    }\r\n\r\n    handleSingupPassword(passwordValue){\r\n        this.setState({\r\n            SingupPassword : passwordValue\r\n        })\r\n    }\r\n\r\n    handleSingupUser(userValue){\r\n        this.setState({\r\n            SingupUser: userValue\r\n        })\r\n    }\r\n\r\n\r\n    handleSignIn(){\r\n        this.email = this.state.SinginEmail\r\n        this.password = this.state.SinginPassword\r\n\r\n        const SignInPassowrdErrMsg = 'There is an error occurred in Password input box.Try to check what is wrong'\r\n        const SignInEmailErrMsg = 'There is an error occurred in Email input box.Try to check what is wrong'\r\n\r\n        if(this.email===\"\" && this.password===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignIn')\r\n\r\n            this.setState({\r\n                HandleErrorTextOfSignInEmail:true,\r\n                HandleErrorTextOfSignInPassword:true,\r\n                ErrorTextOfSignInEmail:SignInEmailErrMsg,\r\n                ErrorTextOfSignInPassowrd:SignInPassowrdErrMsg,\r\n                SignInAreaStyle:'14%',\r\n            })\r\n        }else if(this.email===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignIn')\r\n\r\n            this.setState({\r\n                HandleErrorTextOfSignInEmail:true,\r\n                HandleErrorTextOfSignInPassword:false,\r\n                ErrorTextOfSignInEmail:SignInEmailErrMsg,\r\n                ErrorTextOfSignInPassowrd:\"\",\r\n                SignInAreaStyle:'16.5%',\r\n            })\r\n        }else if(this.password===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignIn')\r\n\r\n            this.setState({\r\n                HandleErrorTextOfSignInEmail:false,\r\n                HandleErrorTextOfSignInPassword:true,\r\n                ErrorTextOfSignInEmail:\"\",\r\n                ErrorTextOfSignInPassowrd:SignInPassowrdErrMsg,\r\n                SignInAreaStyle:'16.5%',\r\n            })\r\n        }else{\r\n            const promise = this.auth.signInWithEmailAndPassword(this.email,this.password)\r\n            promise.catch(e => ToastsStore.error(e.message))\r\n\r\n            promise.catch(e => {\r\n            if(e.message === \"The email address is badly formatted.\"){\r\n                this.setState({\r\n                    HandleErrorTextOfSignInEmail:true,\r\n                    HandleErrorTextOfSignInPassword:false,\r\n                    ErrorTextOfSignInEmail:\"The email address is badly formatted.\",\r\n                    ErrorTextOfSignInPassowrd:\"\",\r\n                    SignInAreaStyle:'17.5%',\r\n                })\r\n            }\r\n            else if(e.message ===\"There is no user record corresponding to this identifier. The user may have been deleted.\"){\r\n                this.setState({\r\n                    HandleErrorTextOfSignInEmail:true,\r\n                    HandleErrorTextOfSignInPassword:true,\r\n                    ErrorTextOfSignInEmail:\"There is no user record corresponding to this identifier. The user may have been deleted.\",\r\n                    ErrorTextOfSignInPassowrd:\"There is no user record corresponding to this identifier. The user may have been deleted.\",\r\n                    SignInAreaStyle:'13.5%',\r\n                })\r\n            }\r\n            else if(e.message ===\"The password is invalid or the user does not have a password.\"){\r\n                this.setState({\r\n                    HandleErrorTextOfSignInEmail:true,\r\n                    HandleErrorTextOfSignInPassword:true,\r\n                    ErrorTextOfSignInEmail:\"The password is invalid or the user does not have a password.\",\r\n                    ErrorTextOfSignInPassowrd:\"The password is invalid or the user does not have a password.\",\r\n                    SignInAreaStyle:'14%',\r\n                })\r\n            }\r\n        })\r\n\r\n            if(promise.catch() === -1){\r\n                this.setState({\r\n                    SinginEmail:\"\",\r\n                    SinginPassword:\"\",\r\n                })   \r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    handleSignUP(){\r\n\r\n        this.email = this.state.SingupEmail\r\n        this.password = this.state.SingupPassword\r\n        this.username = this.state.SingupUser\r\n\r\n        const SignUpPassowrdErrMsg = 'There is an error occurred in Password input box.Try to check what is wrong'\r\n        const SignUpEmailErrMsg = 'There is an error occurred in Email input box.Try to check what is wrong'\r\n        const SignUpUserNameErrMsg = 'There is an error occurred in UserName input box.Try to check what is wrong'\r\n\r\n        if(this.email===\"\" && this.password===\"\"&& this.username===\"\"){\r\n            // condition if all inputs are null\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n\r\n            \r\n\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:true,\r\n                HandleErrorTextOfSignUpUserName:true,\r\n                HandleErrorTextOfSignUpEmail:true,\r\n                ErrorTextOfSignUpPassowrd:SignUpPassowrdErrMsg,\r\n                ErrorTextOfSignUpUserName:SignUpUserNameErrMsg,\r\n                ErrorTextOfSignUpEmail:SignUpEmailErrMsg,\r\n                SignUpAreaStyle:\"8%\",\r\n            })\r\n        }\r\n        // condition if password and username are null\r\n        else if(this.password===\"\" && this.username===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:true,\r\n                HandleErrorTextOfSignUpUserName:true,\r\n                HandleErrorTextOfSignUpEmail:false,\r\n                ErrorTextOfSignUpPassowrd:SignUpPassowrdErrMsg,\r\n                ErrorTextOfSignUpUserName:SignUpUserNameErrMsg,\r\n                ErrorTextOfSignUpEmail:\"\",\r\n                SignUpAreaStyle:\"11%\",\r\n            })\r\n        }\r\n        // condition if email and username inputs are null\r\n        else if(this.email===\"\" && this.username===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:false,\r\n                HandleErrorTextOfSignUpUserName:true,\r\n                HandleErrorTextOfSignUpEmail:true,\r\n                ErrorTextOfSignUpPassowrd:\"\",\r\n                ErrorTextOfSignUpUserName:SignUpUserNameErrMsg,\r\n                ErrorTextOfSignUpEmail:SignUpEmailErrMsg,\r\n                SignUpAreaStyle:\"11%\",\r\n            })\r\n        }\r\n        // condition if password and email inputs are null\r\n        else if(this.password===\"\" && this.email===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:true,\r\n                HandleErrorTextOfSignUpUserName:false,\r\n                HandleErrorTextOfSignUpEmail:true,\r\n                ErrorTextOfSignUpPassowrd:SignUpPassowrdErrMsg,\r\n                ErrorTextOfSignUpUserName:\"\",\r\n                ErrorTextOfSignUpEmail:SignUpEmailErrMsg,\r\n                SignUpAreaStyle:\"11%\",\r\n            })\r\n        }\r\n        // condition if password input are null\r\n        else if(this.password===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:true,\r\n                HandleErrorTextOfSignUpUserName:false,\r\n                HandleErrorTextOfSignUpEmail:false,\r\n                ErrorTextOfSignUpPassowrd:SignUpPassowrdErrMsg,\r\n                ErrorTextOfSignUpUserName:\"\",\r\n                ErrorTextOfSignUpEmail:\"\",\r\n                SignUpAreaStyle:\"13%\",\r\n            })\r\n        }\r\n        // condition if email input are null\r\n        else if(this.email===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:false,\r\n                HandleErrorTextOfSignUpUserName:false,\r\n                HandleErrorTextOfSignUpEmail:true,\r\n                ErrorTextOfSignUpPassowrd:\"\",\r\n                ErrorTextOfSignUpUserName:\"\",\r\n                ErrorTextOfSignUpEmail:SignUpEmailErrMsg,\r\n                SignUpAreaStyle:\"13%\",\r\n            })\r\n        }\r\n        // condition if username input are null\r\n        else if(this.username===\"\"){\r\n            ToastsStore.error('You need to fill the input box to get SignUp')\r\n            this.setState({\r\n                HandleErrorTextOfSignUpPassowrd:false,\r\n                HandleErrorTextOfSignUpUserName:true,\r\n                HandleErrorTextOfSignUpEmail:false,\r\n                ErrorTextOfSignUpPassowrd:\"\",\r\n                ErrorTextOfSignUpUserName:SignUpUserNameErrMsg,\r\n                ErrorTextOfSignUpEmail:\"\",\r\n                SignUpAreaStyle:\"13%\",\r\n            })\r\n        }else{\r\n\r\n            const promise = this.auth.createUserWithEmailAndPassword(this.email,this.password)\r\n            promise.catch(e => ToastsStore.error(e.message))\r\n            promise.catch(e => {\r\n                //condition if the email address is badly formatted.\r\n                if(e.message === 'The email address is badly formatted.'){\r\n                this.setState({\r\n                    HandleErrorTextOfSignUpPassowrd:false,\r\n                    HandleErrorTextOfSignUpUserName:false,\r\n                    HandleErrorTextOfSignUpEmail:true,\r\n                    ErrorTextOfSignUpPassowrd:\"\",\r\n                    ErrorTextOfSignUpUserName:\"\",\r\n                    ErrorTextOfSignUpEmail:'The email address is badly formatted.',\r\n                    SignUpAreaStyle:\"14%\",\r\n                })\r\n            }\r\n            //condition if The email address is already in use by another account.\r\n            else if(e.message === 'The email address is already in use by another account.'){\r\n                this.setState({\r\n                    HandleErrorTextOfSignUpPassowrd:false,\r\n                    HandleErrorTextOfSignUpUserName:false,\r\n                    HandleErrorTextOfSignUpEmail:true,\r\n                    ErrorTextOfSignUpPassowrd:\"\",\r\n                    ErrorTextOfSignUpUserName:\"\",\r\n                    ErrorTextOfSignUpEmail:'The email address is already in use by another account.',\r\n                    SignUpAreaStyle:\"14%\",\r\n                })\r\n            }\r\n            //condition if Password should be at least 6 characters\r\n            else if(e.message === 'Password should be at least 6 characters'){\r\n                this.setState({\r\n                    HandleErrorTextOfSignUpPassowrd:true,\r\n                    HandleErrorTextOfSignUpUserName:false,\r\n                    HandleErrorTextOfSignUpEmail:false,\r\n                    ErrorTextOfSignUpPassowrd:\"Password should be at least 6 characters\",\r\n                    ErrorTextOfSignUpUserName:\"\",\r\n                    ErrorTextOfSignUpEmail:'',\r\n                    SignUpAreaStyle:\"14%\",\r\n                })\r\n            }\r\n        })\r\n  \r\n\r\n            if(promise.catch() === -1){\r\n                this.setState({\r\n                        SingupEmail:\"\",\r\n                        SingupPassword:\"\",\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const SignInBoxCss ={\r\n            display: this.state.Signup\r\n        }\r\n        const SignUpBoxCss ={\r\n            display: this.state.Signin\r\n        }\r\n        const SignUpAreaStyle={\r\n            padding: this.state.SignUpAreaStyle\r\n        }\r\n        const SingInArea ={\r\n            padding: this.state.SignInAreaStyle\r\n        }\r\n        return(\r\n            <div>\r\n                <ToastsContainer store={ToastsStore} className=\"ToasterLeftTopSide\"/>\r\n                \r\n                <Grid className='UserSigninBox' style={SignInBoxCss}>\r\n                    <Cell size={8}>\r\n                        <div style={SingInArea}>\r\n                            <h2>Sign in To The Site</h2>\r\n                            <TextField\r\n                                id=\"floating-center-title\"\r\n                                type=\"email\"\r\n                                label=\"Email\"\r\n                                lineDirection=\"center\"\r\n                                placeholder=\"Enter your email...\"\r\n                                value={this.state.SinginEmail}\r\n                                onChange={this.handleSinginEmail}\r\n                                className=\"md-cell md-cell--bottom inputfill\"\r\n                                error={this.state.HandleErrorTextOfSignInEmail}\r\n                                errorText={this.state.ErrorTextOfSignInEmail}\r\n                            />\r\n                            <TextField\r\n                                id=\"floating-password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                lineDirection=\"center\"\r\n                                placeholder=\"Enter your password...\"\r\n                                value={this.state.SinginPassword}\r\n                                onChange={this.handleSinginPassword}\r\n                                className=\"md-cell md-cell--bottom inputfill\"\r\n                                error={this.state.HandleErrorTextOfSignInPassword}\r\n                                errorText={this.state.ErrorTextOfSignInPassowrd}\r\n                            />\r\n                            <br/><br/>\r\n                            <button className=\"Submitebutton\" onClick={this.handleSignIn}>SIGN IN</button>\r\n                        </div>\r\n                    </Cell>\r\n                    <Cell size={4} className='SingInTextArea' >\r\n                            <div className=\"SignText\">\r\n                                <h3>Welcome back!</h3>\r\n                                <br/>\r\n                                <p>this website is just for testing so dont enter any of your persinal details please</p>\r\n                                <br/>\r\n                                <button className='SignUpbutton' onClick={this.handleSignInChanges}>SIGN UP</button>\r\n                            </div>\r\n                    </Cell>\r\n                </Grid>\r\n\r\n                <Grid className='UserSignUpBox' style={SignUpBoxCss}>\r\n                    <Cell size={4} className='SingInTextArea' >\r\n                            <div className=\"SignText\">\r\n                                <h3>Hello Friend!</h3>\r\n                                <br/>\r\n                                <p>this website doesn't secure any kind of password or persinal infos.It saves date in plane text so please don't integrate your persinal infos here</p>\r\n                                <br/>\r\n                                <button className='SignUpbutton' onClick={this.handleSignUpChanges}>SIGN IN</button>\r\n                            </div>\r\n                    </Cell>\r\n                    <Cell size={8}>\r\n                        <div style={SignUpAreaStyle}>\r\n                            <h2>Create Account</h2>\r\n                            <TextField\r\n                                id=\"floating-center-title\"\r\n                                label=\"UserName\"\r\n                                lineDirection=\"center\"\r\n                                placeholder=\"Enter your username...\"\r\n                                value={this.state.SingupUser}\r\n                                onChange={this.handleSingupUser}\r\n                                className=\"md-cell md-cell--bottom inputfill\"\r\n                                error={this.state.HandleErrorTextOfSignUpUserName}\r\n                                errorText={this.state.ErrorTextOfSignUpUserName}\r\n                            />\r\n                            <TextField\r\n                                id=\"floating-center-title\"\r\n                                type=\"email\"\r\n                                label=\"Email\"\r\n                                lineDirection=\"center\"\r\n                                placeholder=\"Enter your email...\"\r\n                                value={this.state.SingupEmail}\r\n                                onChange={this.handleSingupEmail}\r\n                                className=\"md-cell md-cell--bottom inputfill\"\r\n                                error={this.state.HandleErrorTextOfSignUpEmail}\r\n                                errorText={this.state.ErrorTextOfSignUpEmail}\r\n                            />\r\n                            <TextField\r\n                                id=\"floating-center-password\"\r\n                                type=\"password\"\r\n                                label=\"Password\"\r\n                                lineDirection=\"center\"\r\n                                placeholder=\"Enter your password...\"\r\n                                value={this.state.SingupPassword}\r\n                                onChange={this.handleSingupPassword}\r\n                                className=\"md-cell md-cell--bottom inputfill\"\r\n                                error={this.state.HandleErrorTextOfSignUpPassowrd}\r\n                                errorText={this.state.ErrorTextOfSignUpPassowrd}\r\n                            />\r\n                            <br/><br/>\r\n                            <button className=\"Submitebutton\" onClick={this.handleSignUP}>SIGN UP</button>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default UserSignin ","import React ,{Component}from 'react'\r\nimport './profilesettings.css'\r\n\r\nclass ProfileSettings extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.handleSpanSetting = this.handleSpanSetting.bind(this)\r\n    }\r\n\r\n    handleSpanSetting(){\r\n        this.props.handleSpanSetting()\r\n    }\r\n\r\n    render(){\r\n        const divid = this.props.divid\r\n        return(\r\n        <div>\r\n            <div className=\"modal\" id={divid}>\r\n                <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                        <span className=\"close\" onClick={this.handleSpanSetting}>&times;</span>\r\n                        <br/>\r\n                        <center><h2>Profile Settings</h2></center>\r\n                        </div>\r\n\r\n                        <div className=\"modal-body\">\r\n                        <p>Some text in the Modal Body</p>\r\n                        <p>Some other text...</p>\r\n                        </div>\r\n\r\n                        <div className=\"modal-footer\">\r\n                        <h3>Modal Footer</h3>\r\n                        </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ProfileSettings","import React ,{Component}from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ProfileSettings from './profilesettings'\r\nimport {\r\n    Avatar,\r\n    FontIcon,\r\n    AccessibleFakeButton,\r\n    IconSeparator,\r\n    DropdownMenu,\r\n  } from 'react-md';\r\nimport firebaseApp from '../firebase/config'\r\nimport firebase from 'firebase'\r\nimport {ToastsContainer, ToastsStore} from 'react-toasts';\r\nimport Loader from 'react-loader-spinner'\r\nimport './dashboard.css'\r\nimport { truncate } from 'fs';\r\n\r\nclass Homepage extends Component{\r\n\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            userImgUrl:'',\r\n            userName:\"\",\r\n            userIconFirstLetter:'',\r\n            loadingDash:false,\r\n            showSettings:false,\r\n        }\r\n        this.dataLoadingDash = firebaseApp.database().ref().child('loadingDash');\r\n        this.auth = firebaseApp.auth()\r\n        this.user = firebaseApp.auth().currentUser\r\n\r\n        this.handleLogout = this.handleLogout.bind(this)\r\n        this.handleSettings = this.handleSettings.bind(this)\r\n        this.handleSpanSetting = this.handleSpanSetting.bind(this)\r\n        \r\n        window.onclick =(event) => {\r\n            const modal = document.getElementById('myModal')\r\n            if(event.target === modal){\r\n                this.setState({\r\n                    showSettings:false,\r\n                })\r\n            }\r\n          }\r\n    }\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => {this.dataLoadingDash.on('value' , snap => {\r\n            this.setState({\r\n            loadingDash: snap.val()\r\n            })\r\n            if (this.user != null) {\r\n                this.name = this.user.displayName;\r\n                this.email = this.user.email;\r\n                this.uid = this.user.uid; \r\n                this.userIconFirstLetter =  this.name.toString().charAt(0).toUpperCase()\r\n    \r\n                this.setState({\r\n                    userName: this.name,\r\n                    userIconFirstLetter: this.userIconFirstLetter,\r\n                  })\r\n                ToastsStore.success('Logged In Successfully')\r\n    \r\n              }\r\n          })},2000)\r\n    }\r\n    \r\n    handleSettings(){\r\n        this.setState({\r\n            showSettings:true\r\n        })\r\n    }\r\n    handleSpanSetting(){\r\n        this.setState({\r\n            showSettings:false\r\n        })\r\n    }\r\n\r\n    handleLogout(){\r\n        this.auth.signOut()\r\n    }\r\n\r\n    render(){\r\n        if(this.state.loadingDash === false){\r\n            return(<div className=\"LoadingScrean\">\r\n            <Loader type=\"Triangle\" color=\"rgb(72, 219, 138)\" height={80} width={80} />\r\n          </div>);\r\n            \r\n        }else{\r\n            const ProfileSettingsPopup = () => {\r\n                if(this.state.showSettings === true){\r\n                   return(<ProfileSettings handleSpanSetting={this.handleSpanSetting} divid=\"myModal\"/>);\r\n                }else{\r\n                    return(null)\r\n                }\r\n            }\r\n\r\n            const UserIcon = e =>{\r\n                if(this.state.userImgUrl === ''){\r\n                    \r\n                    return(<Avatar random>{this.state.userIconFirstLetter}</Avatar>)\r\n                }else{\r\n                    return(<Avatar src={this.state.userImgUrl} role=\"presentation\"/>)\r\n                }\r\n            };\r\n            \r\n            const AccountMenu = ({ simplifiedMenu }) => (\r\n                <div>\r\n                    <div className='UserIcon'>\r\n                        <DropdownMenu\r\n                        id={`${!simplifiedMenu ? 'smart-' : ''}avatar-dropdown-menu`}\r\n                        menuItems={[\r\n                            'Preferences', \r\n                            <div \r\n                            role=\"button\" \r\n                            className=\"md-fake-btn md-pointer--hover md-fake-btn--no-outline md-list-tile md-text Hovered\" \r\n                            onClick={this.handleSettings}>Settings</div>, \r\n                            { divider: true }, \r\n                            <div \r\n                            role=\"button\" \r\n                            className=\"md-fake-btn md-pointer--hover md-fake-btn--no-outline md-list-tile md-text Hovered\" \r\n                            onClick={this.handleLogout}>Log Out</div>,\r\n                        ]}\r\n                        anchor={{\r\n                            x: DropdownMenu.HorizontalAnchors.CENTER,\r\n                            y: DropdownMenu.VerticalAnchors.OVERLAP,\r\n                        }}\r\n                        position={DropdownMenu.Positions.TOP_RIGHT}\r\n                        animationPosition=\"below\"\r\n                        sameWidth\r\n                        simplifiedMenu={simplifiedMenu}\r\n                        >\r\n                        <AccessibleFakeButton\r\n                            component={IconSeparator}\r\n                            iconBefore\r\n                            label={\r\n                            <IconSeparator label={this.state.userName}>\r\n                                <FontIcon>arrow_drop_down</FontIcon>\r\n                            </IconSeparator>\r\n                            }\r\n                        >\r\n                            <UserIcon/>\r\n                        </AccessibleFakeButton>\r\n                        </DropdownMenu>\r\n                    </div>\r\n                </div>\r\n              );\r\n              \r\n              AccountMenu.propTypes = {\r\n                simplifiedMenu: PropTypes.bool,\r\n              };\r\n            return(\r\n                <div>\r\n                    <ToastsContainer store={ToastsStore} className=\"ToasterLeftTopSide\"/>\r\n                    <ProfileSettingsPopup/>\r\n                    <AccountMenu/>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Homepage","import React ,{Component}from 'react';\nimport UserSignin from './userinfo/userSignIn'\nimport Homepage from './dashboard/homepage'\nimport { Grid, Cell } from 'react-md';\nimport Loader from 'react-loader-spinner'\nimport firebaseApp from './firebase/config'\nimport firebase from 'firebase'\nimport './userinfo/userSign.css'\n\nclass App extends Component {\n\n  constructor(){\n    super()\n\n    this.state= {\n      loading:false,\n      loggedin:false,\n    }\n\n    this.auth = firebaseApp.auth()\n    this.data = firebaseApp.database().ref().child('loading');\n\n    this.handleLoggedIn = this.handleLoggedIn.bind(this)\n    this.handleNotLoggedIn = this.handleNotLoggedIn.bind(this)\n    \n    firebase.auth().onAuthStateChanged(firebaseUser => {\n      if(firebaseUser){\n        this.handleLoggedIn()\n      }else{\n        this.handleNotLoggedIn()\n      }\n    })\n    \n    \n  }\n\n  componentDidMount(){\n    setTimeout(() => {this.data.on('value' , snap => {\n      this.setState({\n        loading: snap.val()\n      })\n    })},4500)\n    \n  }\n\n  handleLoggedIn(){\n    this.setState({\n      loggedin:true,\n    })\n  }\n\n  handleNotLoggedIn(){\n    this.setState({\n      loggedin:false,\n    })\n  }\n  render(){\n    const checkloggedin = this.state.loggedin\n    {\n      if(this.state.loading === false){\n          //Loading screen start\n        return(\n          <div className=\"LoadingScrean\">\n            <Loader type=\"Bars\" color=\"rgb(72, 219, 138)\" height={100} width={100} />\n          </div>\n        );\n\n      }else{\n        //Loading screen done\n\n        if(checkloggedin === true){\n\n          //Homepage if logged in\n          return(\n          <div>\n            <Homepage/>\n          </div>\n          );\n\n        }else{\n          //Sign in Sign up Page if not logged in\n          return(\n          <div>\n            \n              <Grid>\n                <Cell size={1}><span></span></Cell>\n                <Cell size={10}>\n                  <div className='UserSignIn'>\n                    <center>\n                      <UserSignin/>\n                    </center>\n                  </div>   \n                </Cell>\n                <Cell size={1}><span></span></Cell>\n              </Grid>\n          </div>\n          );\n\n        }\n      }\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}